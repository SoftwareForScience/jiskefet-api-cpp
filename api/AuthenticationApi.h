/**
 * Jiskefet
 * Running with /api base path
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.2.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * AuthenticationApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_AuthenticationApi_H_
#define IO_SWAGGER_CLIENT_API_AuthenticationApi_H_


#include "../ApiClient.h"

#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  AuthenticationApi
{
public:
    AuthenticationApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~AuthenticationApi();
    /// <summary>
    /// Authenticate a user by giving an Authorization Grant.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="grant"></param>
    pplx::task<void> authGet(
        utility::string_t grant
    );
    /// <summary>
    /// Returns a JWT for authorization when running end-to-end tests.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="hashedSecret"> (optional)</param>
    pplx::task<void> testTokenGet(
        boost::optional<utility::string_t> hashedSecret
    );
    /// <summary>
    /// Returns the user&#39;s profile
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<void> userProfileGet(
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_AuthenticationApi_H_ */

