/**
 * Jiskefet
 * Running with /api base path
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.4.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UsersApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_UsersApi_H_
#define IO_SWAGGER_CLIENT_API_UsersApi_H_


#include "../ApiClient.h"

#include "CreateSubSystemPermissionDto.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  UsersApi
{
public:
    UsersApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~UsersApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id"></param>
    pplx::task<void> usersIdGet(
        int64_t id
    );
    /// <summary>
    /// Returns all Logs for a specific User.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id"></param>
    /// <param name="orderBy">On which field to order on. (optional)</param>
    /// <param name="orderDirection">The order direction, either ascending or descending. (optional)</param>
    /// <param name="pageSize">The maximum amount of logs in each result. (optional, default to 25)</param>
    /// <param name="pageNumber">The current page, i.e. the offset in the result set based on pageSize. (optional, default to 1)</param>
    /// <param name="logId">The id of the log. (optional)</param>
    /// <param name="searchterm">Search for a term that exists in the title field of a log. (optional)</param>
    /// <param name="subtype">The subtype of the log. (optional)</param>
    /// <param name="origin">The origin/creator of the log. (optional)</param>
    /// <param name="startCreationTime">The lower bound of the creation time filter range. (optional)</param>
    /// <param name="endCreationTime">The upper bound of the creation time filter range. (optional)</param>
    /// <param name="user">The author of the log.. (optional)</param>
    pplx::task<void> usersIdLogsGet(
        int64_t id,
        boost::optional<utility::string_t> orderBy,
        boost::optional<utility::string_t> orderDirection,
        boost::optional<utility::string_t> pageSize,
        boost::optional<utility::string_t> pageNumber,
        boost::optional<utility::string_t> logId,
        boost::optional<utility::string_t> searchterm,
        boost::optional<utility::string_t> subtype,
        boost::optional<utility::string_t> origin,
        boost::optional<utility::string_t> startCreationTime,
        boost::optional<utility::string_t> endCreationTime,
        boost::optional<utility::string_t> user
    );
    /// <summary>
    /// Returns all generated Tokens for a specific User.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id"></param>
    pplx::task<void> usersIdTokensGet(
        int64_t id
    );
    /// <summary>
    /// Creates a Token and links it to a Subsytem.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="createSubSystemPermissionDto"></param>
    /// <param name="id"></param>
    pplx::task<void> usersIdTokensPost(
        std::shared_ptr<CreateSubSystemPermissionDto> createSubSystemPermissionDto,
        int64_t id
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_UsersApi_H_ */

