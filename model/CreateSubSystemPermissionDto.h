/**
 * Jiskefet
 * Running with /api base path
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.2.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CreateSubSystemPermissionDto.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_CreateSubSystemPermissionDto_H_
#define IO_SWAGGER_CLIENT_MODEL_CreateSubSystemPermissionDto_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreateSubSystemPermissionDto
    : public ModelBase
{
public:
    CreateSubSystemPermissionDto();
    virtual ~CreateSubSystemPermissionDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateSubSystemPermissionDto members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getUser() const;
        void setUser(std::shared_ptr<Object> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getSubsystem() const;
        void setSubsystem(std::shared_ptr<Object> value);
    /// <summary>
    /// If the user is a member.
    /// </summary>
    bool isIsMember() const;
        void setIsMember(bool value);
    /// <summary>
    /// Reason for the end of run.
    /// </summary>
    bool isEditEorReason() const;
        void setEditEorReason(bool value);
    /// <summary>
    /// A unique token for a subsystem linked to a user.
    /// </summary>
    utility::string_t getSubSystemHash() const;
        void setSubSystemHash(utility::string_t value);
    /// <summary>
    /// A description for the subsystem.
    /// </summary>
    utility::string_t getSubSystemTokenDescription() const;
        void setSubSystemTokenDescription(utility::string_t value);

protected:
    std::shared_ptr<Object> m_User;
        std::shared_ptr<Object> m_Subsystem;
        bool m_IsMember;
        bool m_EditEorReason;
        utility::string_t m_SubSystemHash;
        utility::string_t m_SubSystemTokenDescription;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_CreateSubSystemPermissionDto_H_ */
